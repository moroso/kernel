// Could use optimiz - Could maybe asm optimiz
fn mos_memset<T>(pT: *T, c: u8, n: u32) {
    let p: *u8 = pT as *u8;
    let i: u32;
    for (i = 0; i < n; i += 1) {
        p[i] = c;
    }
}

// Could use optimiz - Could maybe asm optimiz
fn mos_memcpy<T>(destT: *T, srcT: *T, n: u32) {
    let dest: *u8 = destT as *u8;
    let src: *u8 = srcT as *u8;
    let i: u32;
    for (i = 0; i < n; i += 1) {
        dest[i] = src[i];
    }
}

/* you might want this general, but comparisons are weird */
fn min(a: u32, b: u32) -> u32 {
    if (a > b) {
        return b;
    }
    a
}

fn max(a: u32, b: u32) -> u32 {
    if (a < b) {
        return b;
    }
    a
}

fn round_up(num: u32, round_val: u32) -> u32 {
    if (num%round_val != 0) {
        return (num + (round_val - num%round_val));
    }
    num
}

