
struct proc {
    PD: PD_t,
    pid: u32,
    parent_pid: u32,
    peer_tcb_list: list_head,
    child_proc_list: list_head,
    dir_link: list_node, 
    dir_ref: u32,
    child_link: list_node,
    
}

fn proc_init(new_proc: *proc, new_tcb: *tcb) -> i32 {
    assert(new_tcb->state == STATE_NEW);
    list_init_head(&(new_proc->peer_tcb_list));
    list_init_head(&(new_proc->child_proc_list));
    if (PD_init(&(new_proc->PD)) < 0) {
        return -1;
    }
    new_proc->pid = new_tcb->tid;
    list_insert_head(&new_tcb->proc_link, &(new_proc->peer_tcb_list));
    list_init_node(&(new_proc->dir_link));
    assert(new_tcb->proc == null);
    new_tcb->proc = new_proc;
    proc_dir_add(new_proc);
    0
}


