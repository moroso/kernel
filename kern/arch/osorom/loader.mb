use arch::are_ints_enabled;
use arch::regs::uregs;

const stack_grows_up: bool = true;

fn load_set_regs(ureg: *uregs, stack_ptr: u32, entry_point: u32) {
    ureg->r[30] = stack_ptr;
    if are_ints_enabled() {
        // If interrupts are enabled, make sure to set that bit in EPC.
        ureg->ip = entry_point | 0x2;
    } else {
        ureg->ip = entry_point;
    }
}

// TODO: actually flush the right address.
// (For now, in the CPU, flush always clears the entire cache so
// we're good for the time being...)
extern "bare" fn flush_cache() {
    asm!("{ flush.data r0; }"
         "{ b r31 + 1; }"
    );
}

fn finish_perform(uregs: *uregs, argc: u32, argv: **u8) {
    uregs->r[0] = argc;
    uregs->r[1] = argv as u32;
    flush_cache();
}
