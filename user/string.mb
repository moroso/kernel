// max chars to make up a i32 for atoi
const INT_CHAR_MAX: u32 = 10;

fn strncpy(to: *u8, from: *u8, len: u32) -> u32 {
    let i: u32;
    for (i = 0; i < len; i+=1) {
        to[i] = from[i];
        if (from[i] == 0) {
            break;
        }
    }
    i+1
}


fn strnlen(str: *u8, maxLen: u32) -> u32 {
    let i: u32 = 0;
    while (str[i] != 0 && i < maxLen) {
        i+=1;
    }
    i
}

fn atoi(str: *u8) -> i32 {
	  let is_neg: bool = false;
		if (str == null) {
				return 0;
		}
		let len = strnlen(str, INT_CHAR_MAX);
		if (len == 0) {
				return 0;
		}
		if (str[0] == '-') {
				is_neg = true;
        str+=1;
        len-=1;
		}

	  let i: u32;
    let num = 0;
    for (i = 0; i < len; i+=1) {
        num*=10;
        num+=(str[i] - '0');
		}
    if (is_neg) {
        num*=-1;
    }
    num
}



fn strcmp(s1: *u8, s2: *u8) -> i32 {
    let c: u32 = 0;
    while (s1[c] != 0 && s2[c] != 0) {
        if (s1[c] != s2[c]) {
            return -1;
        }

        c+=1;
    }
    if (s1[c] == 0 && s2[c] == 0) {
        return 0;
    }
    -1
}

