/* console_test.mb: basic test of console server.  Allocates a buffer and
 * makes a request to use the buffer with the console. 
*/

use syslib::{abscond, mailbox_new, mailbox_remove, new_vid_buffer};
use server::new_server;
use console::{CONSOLE_SERVER_ID, use_console};

const NUM_CONSOLE_THREADS: u32 = 16;

fn main() -> i32 {

    /*** initialize console server; blocks until server is set up ***/
    let new_mb = mailbox_new();
    if (new_mb < 0) {
        printf!("ERROR: initializing new mailbox\n");
        abscond(-1);
    }
    let console_mb: i32;
    if ((console_mb = new_server(CONSOLE_SERVER_ID, NUM_CONSOLE_THREADS, new_mb)) < 0) {
        printf!("ERROR: initializing console server\n");
        abscond(-1);
    }
    mailbox_remove(new_mb as u32);

    /* TODO buffer allocation syscall; will look something 
     * like get_buffer(addr: *u8, size: u32) -> i32 
     * maps a buffer at addr and associates it with a buffer id */
    let buffer_id = 4; 

    // perform buffer operations

    /*** request to use new buffer with console ***/
    if (use_console(console_mb as u32, 0xdeadb000 as *u8, -1) < 0) {
        printf!("ERROR: console\n");
        abscond(-1);
    }

    printf!("***SUCCESS***\n");
    abscond(0);
    0
}
