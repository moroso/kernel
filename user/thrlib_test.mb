mod syslib;
mod thrlib;


fn spin(bullshit: *u8) {
    let args : syslib::shared::ipc_defs::ipc_args;
    args.dest_id = 0;
    args.long_src.len = 0;
    args.long_dest.len = 0;
    args.short_src.len = 0;
    args.long_dest.len = 0;
    args.timeout = 20;
    args.options = 4;
    printf!("child %d\n", syslib::get_tid());
    printf!("recv returned %d\n", syslib::ipc_recv(&args));
    syslib::abscond(1);
}

fn main() -> i32 {
    let i: u32;
    let desc = syslib::mailbox_new();
    for (i = 0; i < 100; i+=1) {
        assert!(thrlib::thr_create(spin, null) >= 0);
    }
    
    let args : syslib::shared::ipc_defs::ipc_args;
    args.dest_id = 0;
    args.long_src.len = 0;
    args.long_dest.len = 0;
    args.short_src.len = 0;
    args.long_dest.len = 0;
    args.timeout = 20;
    args.options = 4;
    for (i = 0; i < 20; i+=1) {
        printf!("send returned %d\n", syslib::ipc_send(&args));
    }
    printf!("parent\n");
    while(true) {}
    0
}
