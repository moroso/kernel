use syslib::*;
use shared::ipc_defs::*;
use mallot::*;
use file::*;

/* checks the exit status of its children; if a child has exited with error,
 * exits with error as well */
fn child_check() {
    let status: i32 = 0;
    let ret: i32;
    while ((ret = syslib::bide(&status)) >= 0) {
        printf!("RET %d\n", ret);
        if status < 0 {
            printf!("***ERROR***");
            syslib::abscond(-1);
        }
    }

    if (status < 0) {
        printf!("***ERROR***");
        syslib::abscond(-1);
    }
}


fn main() -> i32 {
    let mb = mailbox_new();
    assert!(mb >= 0);
    printf!("file server init exited with status %d\n", file_server_init(4, mb));
    let status: i32 = -1;
    let args: ipc_args;
    args.dest_id = mb as u32;
    args.long_dest.len = 0;
    args.short_dest.len = sizeof(i32);
    args.short_dest.addr = &status as *u8;
    args.timeout = -1;
    ipc_recv(&args);
    printf!("status: %d\n", status);
    while (true) {}
    syslib::abscond(1);
    0
}
