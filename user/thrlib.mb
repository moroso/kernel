use prelude::shared::consts*;
use prelude::syslib::*;
use prelude::arch::{repl_with_stack, stack_grows_up};

const STACK_SIZE: u32 = 2; // number of pages in new userstack

fn thr_create(function: fn(*u8)->(), args: *u8) -> i32 {

    /* find a stack range that hasn't yet been allocated */
    let stack_start = USER_MEM_START as *u8;
    while((stack_start + (STACK_SIZE * PAGE_SIZE)) <
            USER_MEM_END as *u8) {

        /* if an allocation succeeds, call this the new stack */
        if (new_pages(stack_start, STACK_SIZE *
                    PAGE_SIZE, 1024) >= 0) {
            if !stack_grows_up {
                // start stack at high address
                stack_start += (PAGE_SIZE - (2 * sizeof(u32)));
            }
            return repl_with_stack(stack_start, function, args);
        }
        stack_start+=PAGE_SIZE;
    }
    -1
}
