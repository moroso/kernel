mod shared;

extern fn syscall_0(idx: u32) -> u32;
extern fn syscall_1(idx: u32, arg1: u32) -> u32;
extern fn syscall_2(idx: u32, arg1: u32, arg2: u32) -> u32;
extern fn syscall_3(idx: u32, arg1: u32, arg2: u32, arg3: u32) -> u32;

// A system call
fn test_sys(arg: u32) -> u32 {
    syscall_1(1, arg)
}

fn repl() -> u32 {
    syscall_0(shared::syscall_consts::INT_REPL)
}

fn thr_repl() -> i32 {
    syscall_0(shared::syscall_consts::INT_THR_REPL) as i32
}

fn abscond(status: u32) {
    syscall_1(shared::syscall_consts::INT_ABSCOND, status);
}

fn bide(pointer: *u32) -> i32 {
    syscall_1(shared::syscall_consts::INT_BIDE, pointer as u32) as i32
}

fn print(s: *u8) {
    syscall_1(shared::syscall_consts::INT_PRINT, s as u32);
}

fn get_tid() -> u32 {
    syscall_0(shared::syscall_consts::INT_GETTID)
}

fn perform(filename: *u8) -> i32 {
    syscall_1(shared::syscall_consts::INT_PERFORM, filename as u32) as i32
}
